 pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-cred')
        AWS_SECRET_ACCESS_KEY = credentials('aws-cred')
    }
stages{
    stage('Deploy to ECS') {
            steps {
                // Check the image tag (latest commit ID)
                script {
                    def latestCommitId = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    def imageTag = sh(script: 'aws ecr describe-images --repository-name todo --region us-west-1 --query \'sort_by(imageDetails,&imagePushedAt)[-1].imageTags[0]\' --output text', returnStdout: true).trim()
                    echo "$imageTag"
                    if ("${latestCommitId}" == "${imageTag}") {
                        // Manual approval for deployment
                        def deploymentApproval = input(
                            id: 'deploymentApproval',
                            message: "Proceed with deployment of image ${imageTag} to ECS? (yes/no)",
                            parameters: [choice(choices: ['yes', 'no'], description: 'Choose yes or no', name: 'Approval')]
                        )

                        if (deploymentApproval == 'yes') {
                            echo "Deployment approved. Proceeding with deployment of image ${imageTag} to ECS..."
                            // Implement deployment to ECS here
                             def taskDefinitionJson = """
                            {
                                "family": "todo-task",
                                "networkMode": "awsvpc",
                                "requiresCompatibilities": ["FARGATE"],
                                "cpu": "256",
                                "memory": "512",
                                "executionRoleArn": "arn:aws:iam::060570890627:role/ecsTaskExecutionRole",
                                "containerDefinitions": [{
                                    "name": "todo-container",
                                    "image": "060570890627.dkr.ecr.us-west-1.amazonaws.com/todo:${imageTag}",
                                    "essential": true,
                                    "portMappings": [{
                                        "containerPort": 8000,
                                        "hostPort": 8000
                                    }]
                                }]
                            }
                            """
                            
                            sh """
                            aws ecs register-task-definition \
                                --region us-west-1 \
                                --cli-input-json '${taskDefinitionJson}'
                            """
                            
                            // create service 
                           sh """
                           aws ecs create-service \
                           --region us-west-1 \
                           --cluster todo \
                           --service-name todo-service \
                           --task-definition todo-task \
                           --desired-count 1 \
                           --launch-type FARGATE \
                           --network-configuration 'awsvpcConfiguration={subnets=[subnet-0e3a470a8a2508d16,subnet-0db8bdb270e49e633],securityGroups=[sg-09fe7f3c0f9aacc32],assignPublicIp="ENABLED"}'
                        """
                            
                        } else {
                            error 'Deployment not approved. Stopping the pipeline.'
                        }
                    } else {
                        echo "Image tag (${imageTag}) does not match the latest commit ID (${latestCommitId}). Skipping deployment."
                    }
                }
            }
     }   
}
}
